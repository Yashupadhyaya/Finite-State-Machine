// Test generated by RoostGPT for test test-csharp5 using AI Type Open AI and AI Model gpt-4

using NUnit.Framework;
using Moq;
using FiniteStateMachine;

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class FiniteStateMachine_MoveTo_e3f88cdb76
    {
        private Mock<FiniteStateMachine> _mockFiniteStateMachine;
        private StateType _targetStateKey; // Assuming StateType is an enum
        private FiniteStateChangeEventArgs _eventArgs;

        [SetUp]
        public void Setup()
        {
            _mockFiniteStateMachine = new Mock<FiniteStateMachine>();
            _targetStateKey = StateType.ExampleState; // Replace with actual StateType value
            _eventArgs = new FiniteStateChangeEventArgs(_targetStateKey, StateType.OtherState); // Replace with suitable arguments
        }

        [Test]
        public void MoveTo_StateChangeInvoked_ReturnsTargetStateKey()
        {
            // Arrange
            _mockFiniteStateMachine.Setup(m => m.MoveTo(_targetStateKey, _eventArgs)).Returns(_targetStateKey);

            // Act
            var result = _mockFiniteStateMachine.Object.MoveTo(_targetStateKey, _eventArgs);

            // Assert
            Assert.AreEqual(_targetStateKey, result);
        }

        [Test]
        public void MoveTo_StateChangeNotInvoked_ThrowsException()
        {
            // Arrange
            _mockFiniteStateMachine.Setup(m => m.MoveTo(_targetStateKey, _eventArgs)).Throws<Exception>();

            // Act & Assert
            Assert.Throws<Exception>(() => _mockFiniteStateMachine.Object.MoveTo(_targetStateKey, _eventArgs));
        }

        [TearDown]
        public void TearDown()
        {
            _mockFiniteStateMachine = null;
            _eventArgs = null;
        }
    }
}
